name: Catalyst Voices Updates

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Dart
        uses: dart-lang/setup-dart@v1

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Cache Dart packages
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Install dependencies
        run: dart pub get

      - name: Build site
        run: dart run bin/main.dart
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: build
          retention-days: 7

  deploy-production:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    permissions:
      pages: write
      id-token: write
      contents: read

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    concurrency:
      group: "pages"
      cancel-in-progress: false

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          timeout: 600000

  deploy-preview:
    needs: build
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    permissions:
      pages: write
      id-token: write
      pull-requests: write
      deployments: write
      statuses: write
      contents: read

    environment:
      name: preview
      url: ${{ steps.deployment.outputs.preview_url }}

    concurrency:
      group: "pages-pr-${{ github.event.pull_request.number }}"
      cancel-in-progress: true

    steps:
      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Deploy Preview
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          timeout: 600000

      - name: Add Preview URL Comment
        uses: actions/github-script@v6
        with:
          script: |
            const preview_url = '${{ steps.deployment.outputs.preview_url }}';

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `ðŸš€ Preview deployment is ready!\nURL: ${preview_url}\n\n> Note: This preview will be automatically updated as you make changes to your PR.`
            })
